{"version":3,"sources":["hooks/useScrollPosition.js","components/Header.js","utils/helpers.js","components/Footer.js","assets/images/Background.jpg","components/Hero.js","components/About.js","components/Experience.js","components/common/Card.js","components/Projects.js","components/Skills.js","services/api.js","utils/toast.js","components/Contact.js","hooks/usePageTransition.js","pages/Home.js","pages/Contact.js","components/ChatWidget/ChatWidget.js","App.js","index.js"],"names":["useScrollPosition","scrollPosition","setScrollPosition","useState","handleScroll","window","scrollY","useEffect","addEventListener","removeEventListener","Header","menuOpen","setMenuOpen","hasScrolled","setHasScrolled","handleLinkClick","e","_e$currentTarget$getA","currentTarget","getAttribute","startsWith","preventDefault","selector","offset","arguments","length","undefined","element","document","querySelector","offsetPosition","getBoundingClientRect","top","pageYOffset","scrollTo","behavior","scrollToElement","scrollToTop","_jsx","className","children","_jsxs","href","onClick","toggleMenu","Footer","Date","getFullYear","target","rel","Hero","id","style","backgroundImage","scrollToAbout","aboutSection","getElementById","offsetTop","About","Experience","Card","_ref","title","description","image","link","src","alt","Projects","activeFilter","setActiveFilter","projectList","technologies","period","category","filteredProjects","filter","project","name","value","map","index","_Fragment","Skills","skills","icon","idx","skill","width","API_URL","process","REACT_APP_API_URL","submitContactForm","async","axios","post","formData","data","error","_error$response","response","message","updateToast","toastId","options","toast","dismiss","type","success","render","duration","autoClose","position","Contact","setFormData","email","loading","setLoading","handleChange","prevState","onSubmit","showLoadingToast","isLoading","htmlFor","onChange","required","rows","disabled","usePageTransition","heroSection","viewportHeight","innerHeight","scrollPercentage","heroContent","transform","opacity","Math","max","classList","add","Home","isSubmitting","setIsSubmitting","promise","err","finally","placeholder","ChatWidget","isOpen","setIsOpen","messages","setMessages","text","sender","inputValue","setInputValue","setIsLoading","messagesEndRef","useRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","toggleChat","FaRobot","FaTimes","isError","ref","trim","userMessage","prev","console","FaPaperPlane","App","Router","Switch","Route","exact","path","component","Toaster","toastOptions","background","color","ReactDOM","React","StrictMode"],"mappings":"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","file":"static/js/main.cdc63c62.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\n\nconst useScrollPosition = () => {\n    const [scrollPosition, setScrollPosition] = useState(0);\n\n    const handleScroll = () => {\n        setScrollPosition(window.scrollY);\n    };\n\n    useEffect(() => {\n        window.addEventListener('scroll', handleScroll);\n        return () => {\n            window.removeEventListener('scroll', handleScroll);\n        };\n    }, []);\n\n    return scrollPosition;\n};\n\nexport default useScrollPosition;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport useScrollPosition from '../hooks/useScrollPosition';\nimport '../assets/styles/components/header.css';\nimport { scrollToElement } from '../utils/helpers';\n\nconst Header = () => {\n    const scrollPosition = useScrollPosition();\n    const [menuOpen, setMenuOpen] = useState(false);\n    const [hasScrolled, setHasScrolled] = useState(false);\n    \n    useEffect(() => {\n        setHasScrolled(scrollPosition > 50);\n    }, [scrollPosition]);\n    \n    const toggleMenu = () => {\n        setMenuOpen(!menuOpen);\n    };\n\n    const handleLinkClick = (e) => {\n        // If the link has an href attribute that starts with #\n        if (e.currentTarget.getAttribute('href')?.startsWith('#')) {\n            e.preventDefault();\n            const targetId = e.currentTarget.getAttribute('href');\n            scrollToElement(targetId);\n        }\n        setMenuOpen(false);\n    };\n    \n    const scrollToTop = (e) => {\n        e.preventDefault();\n        window.scrollTo({\n            top: 0,\n            behavior: 'smooth'\n        });\n        handleLinkClick(e);\n    };\n\n    return (\n        <header className={`header ${hasScrolled ? 'scrolled' : ''}`}>\n            <div className=\"header-container\">\n                <div className=\"logo\">\n                    <a href=\"#home\" onClick={scrollToTop}>\n                        <h1>\n                            <span className=\"logo-first\">Oussema</span>\n                            <span className=\"logo-last\">Amri</span>\n                        </h1>\n                    </a>\n                </div>\n                \n                <nav className=\"main-nav\">\n                    <ul className={`nav-links ${menuOpen ? 'active' : ''}`}>\n                        <li><a href=\"#home\" onClick={scrollToTop} className=\"nav-link\">Home</a></li>\n                        <li><a href=\"#about\" onClick={handleLinkClick} className=\"nav-link\">About</a></li>\n                        <li><a href=\"#experience\" onClick={handleLinkClick} className=\"nav-link\">Experience</a></li>\n                        <li><a href=\"#projects\" onClick={handleLinkClick} className=\"nav-link\">Work</a></li>\n                        <li><a href=\"#contact\" onClick={handleLinkClick} className=\"nav-link contact-btn\">Contact</a></li>\n                    </ul>\n                </nav>\n                \n                <button className=\"mobile-menu-btn\" onClick={toggleMenu} aria-label=\"Toggle menu\">\n                    <i className={`fas ${menuOpen ? 'fa-times' : 'fa-bars'}`}></i>\n                </button>\n            </div>\n        </header>\n    );\n};\n\nexport default Header;","/**\r\n * Scrolls to the specified element with smooth behavior\r\n * @param {string} selector - The element selector (e.g., '#about')\r\n * @param {number} offset - Offset from the top (useful for fixed headers)\r\n */\r\nexport const scrollToElement = (selector, offset = 80) => {\r\n  const element = document.querySelector(selector);\r\n  if (element) {\r\n    const elementPosition = element.getBoundingClientRect().top;\r\n    const offsetPosition = elementPosition + window.pageYOffset - offset;\r\n    \r\n    window.scrollTo({\r\n      top: offsetPosition,\r\n      behavior: 'smooth'\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * Format date to a readable string\r\n * @param {Date|string} date - Date object or date string\r\n * @returns {string} Formatted date string\r\n */\r\nexport const formatDate = (date) => {\r\n  const d = new Date(date);\r\n  return d.toLocaleDateString('en-US', {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric'\r\n  });\r\n};\r\n\r\n/**\r\n * Truncate text to a specific length\r\n * @param {string} text - Text to truncate\r\n * @param {number} length - Maximum length before truncation\r\n * @returns {string} Truncated text with ellipsis if needed\r\n */\r\nexport const truncateText = (text, length = 150) => {\r\n  if (!text || text.length <= length) return text;\r\n  return text.substring(0, length) + '...';\r\n};\r\n\r\n/**\r\n * Check if an element is in viewport\r\n * @param {HTMLElement} element - The element to check\r\n * @param {number} offset - Offset to consider element visible before it enters viewport\r\n * @returns {boolean} True if element is in viewport\r\n */\r\nexport const isInViewport = (element, offset = 0) => {\r\n  if (!element) return false;\r\n  \r\n  const rect = element.getBoundingClientRect();\r\n  return (\r\n    rect.top <= (window.innerHeight + offset) &&\r\n    rect.bottom >= -offset\r\n  );\r\n};","import React from 'react';\nimport '../assets/styles/components/footer.css';\n\nconst Footer = () => {\n    return (\n        <footer className=\"footer\">\n            <div className=\"footer-content\">\n                <p>&copy; {new Date().getFullYear()} Oussema Amri. All rights reserved.</p>\n                <div className=\"footer-links\">\n                    <a href=\"https://github.com/Oussemamri\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        GitHub\n                    </a>\n                    <a href=\"https://linkedin.com/in/oussema-amri\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        LinkedIn\n                    </a>\n                </div>\n            </div>\n        </footer>\n    );\n};\n\nexport default Footer;","export default __webpack_public_path__ + \"static/media/Background.8d1bcb5e.jpg\";","import React from 'react';\nimport '../assets/styles/components/hero.css';\n// Import background image\nimport backgroundImage from '../assets/images/Background.jpg';\n\nconst Hero = () => {\n    const scrollToAbout = () => {\n        const aboutSection = document.getElementById('about');\n        if (aboutSection) {\n            // Using a smoother scroll approach\n            window.scrollTo({\n                top: aboutSection.offsetTop - 80, // Adjust for header height\n                behavior: 'smooth'\n            });\n        }\n    };\n\n    return (\n        <section \n            className=\"hero\" \n            id=\"home\"\n            style={{\n                backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7)), url(${backgroundImage})`\n            }}\n        >\n            <div className=\"hero-content\">\n                <h1>Oussema Amri</h1>\n                <h2>Software Developer</h2>\n                <p>Highly motivated Computer Science student specializing in web development, DevOps, and AWS</p>\n                <div className=\"hero-buttons\">\n                    <a href=\"#projects\" className=\"btn primary\">View My Work</a>\n                    <a href=\"#contact\" className=\"btn secondary\">Contact Me</a>\n                </div>\n            </div>\n            \n            <div className=\"scroll-indicator\" onClick={scrollToAbout}>\n                <span>Explore More</span>\n                <div className=\"chevron\"></div>\n            </div>\n        </section>\n    );\n};\n\nexport default Hero;","import React from 'react';\nimport '../assets/styles/components/about.css';\n\nconst About = () => {\n    return (\n        <section id=\"about\" className=\"about-section\">\n            <h2>About Me</h2>\n            <div className=\"about-content\">\n                <div className=\"about-text\">\n                    <p>\n                        I'm a Computer Science student currently pursuing my Master's degree at Hochschule Schmalkalden in Germany.\n                        I specialize in software development with a focus on web development, DevOps, and AWS cloud technologies.\n                    </p>\n                    <p>\n                        With practical experience in developing scalable applications using React, Spring Boot, and Django,\n                        I enjoy working in Agile environments and automating CI/CD pipelines to streamline development processes.\n                    </p>\n                    <p>\n                        I'm currently enhancing my cloud expertise by preparing for the AWS Certified Cloud Practitioner certification.\n                    </p>\n                </div>\n                <div className=\"education\">\n                    <h3>Education</h3>\n                    <div className=\"education-item\">\n                        <h4>Master's in Computer Science</h4>\n                        <p>Hochschule Schmalkalden, Germany (2024-2025)</p>\n                    </div>\n                    <div className=\"education-item\">\n                        <h4>Master's in Computer Science</h4>\n                        <p>Esprit School of Engineering, Tunisia (2020-2025)</p>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport default About;","import React from 'react';\r\nimport '../assets/styles/components/experience.css';\r\n\r\nconst Experience = () => {\r\n    return (\r\n        <section className=\"experience-section\" id=\"experience\">\r\n            <div className=\"container\">\r\n                <h2>Professional Experience</h2>\r\n                \r\n                <div className=\"experience-timeline\">\r\n                    {/* New Happy Nation Internship */}\r\n                    <div className=\"experience-item\">\r\n                        <div className=\"experience-content\">\r\n                            <div className=\"experience-header\">\r\n                                <h3>Happy Nation</h3>\r\n                                <span className=\"experience-date\">October 2024 - January 2025</span>\r\n                            </div>\r\n                            <h4 className=\"experience-title\">Full Stack Developer - Internship</h4>\r\n                            <ul className=\"experience-description\">\r\n                                <li>Implemented user passport functionality, enabling users to collect digital stamps across the platform. Enhanced the authentication system with proactive JWT token refreshing for improved security.</li>\r\n                                <li>Deployed and managed the application using AWS services including <strong>EC2</strong>, <strong>S3</strong>, <strong>ECR</strong>, <strong>IAM</strong>, <strong>AMI</strong>, <strong>CodePipeline</strong>, <strong>CodeBuild</strong>, <strong>CloudWatch</strong>, and <strong>Lambda</strong>.</li>\r\n                                <li>Architected and implemented a dynamic frontend component system with 40% code reusability across the platform. Integrated the <strong>Brevo API</strong> into the Django backend, developing a scalable newsletter subscription service that increased customer engagement by 25%.</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Existing Talan Experience */}\r\n                    <div className=\"experience-item\">\r\n                        <div className=\"experience-content\">\r\n                            <div className=\"experience-header\">\r\n                                <h3>Talan Tunisie</h3>\r\n                                <span className=\"experience-date\">July 2024 - August 2024</span>\r\n                            </div>\r\n                            <h4 className=\"experience-title\">Human Resources Management Platform (RHP)</h4>\r\n                            <ul className=\"experience-description\">\r\n                                <li>Developed and maintained key features such as profile management, document handling, and leave tracking using <strong>NestJS</strong> and <strong>React</strong>. Implemented a dynamic dashboard for real-time HR analytics.</li>\r\n                                <li>Collaborated in a <strong>Scrum</strong> team to improve user experience and streamline HR processes, resulting in a 15% increase in efficiency. Enhanced the onboarding process by automating document verification.</li>\r\n                                <li>Performed code reviews and implemented best practices to improve code quality and maintainability. Introduced a CI/CD pipeline to automate testing and deployment.</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"experience-item\">\r\n                        <div className=\"experience-content\">\r\n                            <div className=\"experience-header\">\r\n                                <h3>Talan Tunisie</h3>\r\n                                <span className=\"experience-date\">July 2023 - August 2023</span>\r\n                            </div>\r\n                            <h4 className=\"experience-title\">Project and Meeting Management Platform (Similar to Trello)</h4>\r\n                            <ul className=\"experience-description\">\r\n                                <li>Designed and implemented task and meeting management features using <strong>Symfony</strong> and <strong>Vue.js</strong>, improving project tracking by 20%. Developed calendar integration for seamless scheduling.</li>\r\n                                <li>Led the integration of permission and update management systems, enhancing security and user control. Created a role-based access control system to manage user permissions.</li>\r\n                                <li>Participated in daily stand-ups and sprint planning to ensure timely delivery of project milestones. Facilitated retrospectives to identify and implement process improvements.</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Experience;","import React from 'react';\nimport './Card.css'; // Assuming you have a CSS file for styling the Card component\n\nconst Card = ({ title, description, image, link }) => {\n    return (\n        <div className=\"card\">\n            {image && <img src={image} alt={title} className=\"card-image\" />}\n            <div className=\"card-content\">\n                <h3 className=\"card-title\">{title}</h3>\n                <p className=\"card-description\">{description}</p>\n                {link && (\n                    <a href={link} className=\"card-link\">\n                        Learn More\n                    </a>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Card;","import React, { useState } from 'react';\nimport Card from './common/Card';\nimport '../assets/styles/components/projects.css';\n\nconst Projects = () => {\n    const [activeFilter, setActiveFilter] = useState('all');\n    \n    const projectList = [\n        {\n            title: 'Quiz Application',\n            description: 'AI-driven quiz management system with adaptive learning algorithms that personalize quizzes based on user performance.',\n            technologies: 'Django, Bootstrap, PostgreSQL',\n            period: '2024/09 - 2024/11',\n            link: '#',\n            category: 'web'\n        },\n        {\n            title: 'Collaboradoc - Real-Time Collaboration Platform',\n            description: 'Document management system with versioning, real-time commenting features, and AI tools for automated content suggestions.',\n            technologies: 'React, NestJS',\n            period: '2024/01 - 2024/05',\n            link: '#', \n            category: 'web'\n        },\n        {\n            title: 'DevOps - Application Lifecycle Automation',\n            description: 'CI/CD pipeline automation project with monitoring solutions for improved application reliability.',\n            technologies: 'Jenkins, Maven, Git, SonarQube, Docker',\n            period: '2024/01 - 2024/05',\n            link: '#', \n            category: 'devops'\n        },\n        {\n            title: 'Microservices Architecture',\n            description: 'Designed and deployed a microservices architecture with service discovery and container management.',\n            technologies: 'Spring Boot, Docker',\n            period: '2023/09 - 2023/12',\n            link: '#', \n            category: 'cloud'\n        },\n        {\n            title: 'University Dormitory Management System',\n            description: 'Web application for dormitory and event management with features for room booking and event scheduling.',\n            technologies: 'Angular, Spring Boot',\n            period: '2023/09 - 2023/12',\n            link: '#', \n            category: 'web'\n        }\n    ];\n    \n    const filters = [\n        { name: 'All', value: 'all' },\n        { name: 'Web Development', value: 'web' },\n        { name: 'DevOps', value: 'devops' },\n        { name: 'Cloud', value: 'cloud' }\n    ];\n    \n    const filteredProjects = activeFilter === 'all' \n        ? projectList \n        : projectList.filter(project => project.category === activeFilter);\n\n    return (\n        <section id=\"projects\" className=\"projects-section\">\n            <h2>My Projects</h2>\n            \n            <div className=\"project-filters\">\n                {filters.map((filter, index) => (\n                    <button \n                        key={index}\n                        className={`filter-btn ${activeFilter === filter.value ? 'active' : ''}`}\n                        onClick={() => setActiveFilter(filter.value)}\n                    >\n                        {filter.name}\n                    </button>\n                ))}\n            </div>\n            \n            <div className=\"project-list\">\n                {filteredProjects.map((project, index) => (\n                    <Card \n                        key={index} \n                        title={project.title} \n                        description={\n                            <>\n                                <p>{project.description}</p>\n                                <p className=\"technologies\"><strong>Technologies:</strong> {project.technologies}</p>\n                                <p className=\"period\"><strong>Period:</strong> {project.period}</p>\n                            </>\n                        }\n                        link={project.link}\n                    />\n                ))}\n            </div>\n        </section>\n    );\n};\n\nexport default Projects;","import React from 'react';\nimport '../assets/styles/components/skills.css';\n\nconst Skills = () => {\n    const skillCategories = [\n        {\n            category: 'Programming Languages',\n            skills: ['Java', 'Python', 'JavaScript', 'HTML', 'CSS', 'C'],\n            icon: 'fa-code'\n        },\n        {\n            category: 'Frameworks & Libraries',\n            skills: ['React', 'Vue.js', 'Angular', 'NodeJS', 'NestJS', 'ExpressJS', 'Spring Boot', 'Django', '.NET'],\n            icon: 'fa-layer-group'\n        },\n        {\n            category: 'Development Tools',\n            skills: ['Git', 'Jira', 'Docker', 'Vagrant', 'Postman', 'Swagger'],\n            icon: 'fa-tools'\n        },\n        {\n            category: 'IDEs & Environments',\n            skills: ['PhpStorm', 'Visual Studio Code', 'Visual Studio', 'IntelliJ IDEA'],\n            icon: 'fa-laptop-code'\n        },\n        {\n            category: 'Databases',\n            skills: ['MySQL', 'MongoDB', 'PostgreSQL'],\n            icon: 'fa-database'\n        },\n        {\n            category: 'DevOps',\n            skills: ['Jenkins', 'Prometheus', 'Grafana', 'Nexus', 'JUnit', 'Jest'],\n            icon: 'fa-infinity'\n        },\n        {\n            category: 'AWS Services',\n            skills: [\n                'EC2', 'ECR', 'ECS', 'IAM', 'S3', \n                'Lambda', 'CloudFormation', 'CodePipeline', \n                'CodeBuild', 'CodeDeploy', 'AMI', 'CloudWatch',\n                'Route 53', 'RDS', 'Elastic Beanstalk'\n            ],\n            icon: 'fa-aws'\n        }\n    ];\n\n    return (\n        <section id=\"skills\" className=\"skills-section\">\n            <div className=\"container\">\n                <h2>Technical Skills</h2>\n                <div className=\"skills-container\">\n                    {skillCategories.map((category, idx) => (\n                        <div key={idx} className=\"skill-category\">\n                            <div className=\"skill-header\">\n                                <i className={`${category.icon === 'fa-aws' ? 'fab' : 'fas'} ${category.icon}`}></i>\n                                <h3>{category.category}</h3>\n                            </div>\n                            <div className=\"skills-grid\">\n                                {category.skills.map((skill, index) => (\n                                    <div key={index} className=\"skill-item\">\n                                        <span>{skill}</span>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    ))}\n                </div>\n                \n                <div className=\"languages-section\">\n                    <h3>Languages</h3>\n                    <div className=\"language-items\">\n                        <div className=\"language-item\">\n                            <div className=\"language-name\">English</div>\n                            <div className=\"language-level\">\n                                <div className=\"level-bar\">\n                                    <div className=\"level-fill\" style={{ width: '90%' }}></div>\n                                </div>\n                                <span className=\"proficiency\">C1</span>\n                            </div>\n                        </div>\n                        <div className=\"language-item\">\n                            <div className=\"language-name\">German</div>\n                            <div className=\"language-level\">\n                                <div className=\"level-bar\">\n                                    <div className=\"level-fill\" style={{ width: '35%' }}></div>\n                                </div>\n                                <span className=\"proficiency\">A2</span>\n                            </div>\n                        </div>\n                        <div className=\"language-item\">\n                            <div className=\"language-name\">French</div>\n                            <div className=\"language-level\">\n                                <div className=\"level-bar\">\n                                    <div className=\"level-fill\" style={{ width: '90%' }}></div>\n                                </div>\n                                <span className=\"proficiency\">C1</span>\n                            </div>\n                        </div>\n                        <div className=\"language-item\">\n                            <div className=\"language-name\">Arabic</div>\n                            <div className=\"language-level\">\n                                <div className=\"level-bar\">\n                                    <div className=\"level-fill\" style={{ width: '100%' }}></div>\n                                </div>\n                                <span className=\"proficiency\">C2</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport default Skills;","import axios from 'axios';\r\n\r\n// Use environment variable for API URL or default to localhost in development\r\nconst API_URL = process.env.REACT_APP_API_URL || 'https://oussemaamri.com/api';\r\n\r\n// Contact form submission\r\nexport const submitContactForm = async (formData) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/contact`, formData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || { message: 'Network error' };\r\n  }\r\n};\r\n\r\n// Get all projects\r\nexport const getProjects = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/projects`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || { message: 'Network error' };\r\n  }\r\n};","import { toast } from 'react-hot-toast';\r\n\r\n/**\r\n * Show a success toast message\r\n * @param {string} message - The message to display\r\n * @returns {string} Toast ID\r\n */\r\nexport const showSuccessToast = (message) => {\r\n  return toast.success(message, {\r\n    duration: 5000,\r\n    position: 'top-right',\r\n  });\r\n};\r\n\r\n/**\r\n * Show an error toast message\r\n * @param {string} message - The message to display\r\n * @returns {string} Toast ID\r\n */\r\nexport const showErrorToast = (message) => {\r\n  return toast.error(message, {\r\n    duration: 5000,\r\n    position: 'top-right',\r\n  });\r\n};\r\n\r\n/**\r\n * Show a loading toast message\r\n * @param {string} message - The message to display\r\n * @returns {string} Toast ID\r\n */\r\nexport const showLoadingToast = (message) => {\r\n  return toast.loading(message, {\r\n    position: 'top-right',\r\n  });\r\n};\r\n\r\n/**\r\n * Update an existing toast\r\n * @param {string} toastId - The ID of the toast to update\r\n * @param {Object} options - Toast options\r\n */\r\nexport const updateToast = (toastId, options) => {\r\n  toast.dismiss(toastId);\r\n  \r\n  if (options.type === 'success') {\r\n    toast.success(options.render, {\r\n      id: toastId,\r\n      duration: options.autoClose || 5000,\r\n      position: 'top-right',\r\n    });\r\n  } else if (options.type === 'error') {\r\n    toast.error(options.render, {\r\n      id: toastId,\r\n      duration: options.autoClose || 5000,\r\n      position: 'top-right',\r\n    });\r\n  }\r\n};","import React, { useState } from 'react';\nimport { submitContactForm } from '../services/api';\nimport { showSuccessToast, showErrorToast, showLoadingToast, updateToast } from '../utils/toast';\nimport Button from './common/Button';\nimport '../assets/styles/components/contact.css';\n\nconst Contact = () => {\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        message: ''\n    });\n    const [loading, setLoading] = useState(false);\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData(prevState => ({\n            ...prevState,\n            [name]: value\n        }));\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        \n        // Simple validation\n        if (!formData.name || !formData.email || !formData.message) {\n            showErrorToast('Please fill out all fields');\n            return;\n        }\n        \n        setLoading(true);\n        \n        // Show a loading toast and get its ID\n        const toastId = showLoadingToast('Sending your message...');\n        \n        try {\n            await submitContactForm(formData);\n            \n            // Update the toast to success\n            updateToast(toastId, {\n                render: 'Message sent successfully!',\n                type: 'success',\n                isLoading: false,\n                autoClose: 5000\n            });\n            \n            // Reset form\n            setFormData({\n                name: '',\n                email: '',\n                message: ''\n            });\n        } catch (error) {\n            // Update the toast to error\n            updateToast(toastId, {\n                render: error.message || 'Failed to send message',\n                type: 'error',\n                isLoading: false,\n                autoClose: 5000\n            });\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <section id=\"contact\" className=\"contact-section\">\n            <div className=\"container\">\n                <h2 className=\"section-title\">Get In Touch</h2>\n                <p className=\"section-description\">\n                    Feel free to reach out if you want to collaborate, have questions, or just want to say hello!\n                </p>\n                \n                <div className=\"contact-container\">\n                    <div className=\"contact-info\">\n                        <h3>Contact Information</h3>\n                        <p>I'm currently looking for new opportunities. Send me a message and I'll get back to you as soon as possible.</p>\n                        \n                        <div className=\"contact-details\">\n                            <div className=\"contact-item\">\n                                <i className=\"fas fa-envelope\"></i>\n                                <a href=\"mailto:o.amri@stud.fh-sm.de\">o.amri@stud.fh-sm.de</a>\n                            </div>\n                            <div className=\"contact-item\">\n                                <i className=\"fas fa-phone\"></i>\n                                <a href=\"tel:+4915510357723\">(+49) 15510 357723</a>\n                            </div>\n                            <div className=\"contact-item\">\n                                <i className=\"fas fa-map-marker-alt\"></i>\n                                <span>Meiningen, Germany</span>\n                            </div>\n                            <div className=\"social-links\">\n                                <a href=\"https://github.com/Oussemamri\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                    <i className=\"fab fa-github\"></i>\n                                </a>\n                                <a href=\"https://linkedin.com/in/oussema-amri\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                    <i className=\"fab fa-linkedin\"></i>\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    <div className=\"contact-form\">\n                        <form onSubmit={handleSubmit}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"name\">Name</label>\n                                <input \n                                    type=\"text\" \n                                    id=\"name\" \n                                    name=\"name\" \n                                    value={formData.name}\n                                    onChange={handleChange}\n                                    required \n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"email\">Email</label>\n                                <input \n                                    type=\"email\" \n                                    id=\"email\" \n                                    name=\"email\" \n                                    value={formData.email}\n                                    onChange={handleChange}\n                                    required \n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"message\">Message</label>\n                                <textarea \n                                    id=\"message\" \n                                    name=\"message\" \n                                    rows=\"5\"\n                                    value={formData.message}\n                                    onChange={handleChange}\n                                    required\n                                ></textarea>\n                            </div>\n                            <button type=\"submit\" className=\"btn primary\" disabled={loading}>\n                                {loading ? 'Sending...' : 'Send Message'}\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport default Contact;","import { useEffect } from 'react';\r\n\r\nconst usePageTransition = () => {\r\n  useEffect(() => {\r\n    const heroSection = document.querySelector('.hero');\r\n    const aboutSection = document.getElementById('about');\r\n    \r\n    const handleScroll = () => {\r\n      const scrollPosition = window.scrollY;\r\n      const viewportHeight = window.innerHeight;\r\n      \r\n      if (heroSection && aboutSection) {\r\n        // Calculate how much of the hero section has been scrolled past\r\n        const scrollPercentage = (scrollPosition / viewportHeight) * 100;\r\n        \r\n        // Apply a parallax effect to the hero content\r\n        const heroContent = heroSection.querySelector('.hero-content');\r\n        if (heroContent) {\r\n          heroContent.style.transform = `translateY(${scrollPercentage * 0.5}px)`;\r\n          heroContent.style.opacity = Math.max(1 - scrollPercentage / 50, 0);\r\n        }\r\n        \r\n        // Apply entrance animation to about section\r\n        if (scrollPosition > viewportHeight * 0.5) {\r\n          aboutSection.classList.add('in-view');\r\n        }\r\n      }\r\n    };\r\n    \r\n    window.addEventListener('scroll', handleScroll);\r\n    \r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, []);\r\n};\r\n\r\nexport default usePageTransition;","import React from 'react';\nimport Hero from '../components/Hero';\nimport About from '../components/About';\nimport Experience from '../components/Experience';\nimport Projects from '../components/Projects';\nimport Skills from '../components/Skills';\nimport Contact from '../components/Contact';\nimport usePageTransition from '../hooks/usePageTransition';\n\nconst Home = () => {\n    usePageTransition();\n    \n    return (\n        <main>\n            <Hero />\n            <About />\n            <Experience />\n            <Projects />\n            <Skills />\n            <Contact />\n        </main>\n    );\n};\n\nexport default Home;","import React, { useState } from 'react';\r\nimport toast from 'react-hot-toast';\r\nimport { submitContactForm } from '../services/api';\r\nimport '../assets/styles/components/contact.css';\r\n\r\nconst Contact = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    message: ''\r\n  });\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Simple validation\r\n    if (!formData.name || !formData.email || !formData.message) {\r\n      toast.error('Please fill out all fields');\r\n      return;\r\n    }\r\n    \r\n    setIsSubmitting(true);\r\n    \r\n    // Using toast.promise for better handling\r\n    toast.promise(\r\n      submitContactForm(formData),\r\n      {\r\n        loading: 'Sending your message...',\r\n        success: () => {\r\n          // Reset form on success\r\n          setFormData({\r\n            name: '',\r\n            email: '',\r\n            message: ''\r\n          });\r\n          return 'Your message has been sent successfully!';\r\n        },\r\n        error: (err) => `${err.message || 'Failed to send message. Please try again later.'}`\r\n      }\r\n    )\r\n    .finally(() => {\r\n      setIsSubmitting(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <section className=\"contact-section\" id=\"contact\">\r\n      <div className=\"container\">\r\n        <h2 className=\"section-title\">Get In Touch</h2>\r\n        <p className=\"section-description\">\r\n          Feel free to reach out if you want to collaborate, have questions, or just want to say hello!\r\n        </p>\r\n        \r\n        <form className=\"contact-form\" onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              value={formData.name}\r\n              onChange={handleChange}\r\n              placeholder=\"Your Name\"\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              placeholder=\"Your Email\"\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"message\">Message</label>\r\n            <textarea\r\n              id=\"message\"\r\n              name=\"message\"\r\n              value={formData.message}\r\n              onChange={handleChange}\r\n              placeholder=\"Your Message\"\r\n              rows=\"5\"\r\n              required\r\n            ></textarea>\r\n          </div>\r\n          \r\n          <button \r\n            type=\"submit\" \r\n            className=\"submit-btn\"\r\n            disabled={isSubmitting}\r\n          >\r\n            {isSubmitting ? 'Sending...' : 'Send Message'}\r\n          </button>\r\n        </form>\r\n        \r\n        <div className=\"contact-info\">\r\n          <div className=\"contact-item\">\r\n            <i className=\"fas fa-envelope\"></i>\r\n            <a href=\"mailto:contact@oussemaamri.com\">contact@oussemaamri.com</a>\r\n          </div>\r\n          <div className=\"contact-item\">\r\n            <i className=\"fas fa-map-marker-alt\"></i>\r\n            <span>New York, NY</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Contact;","import React, { useState, useEffect, useRef } from 'react';\r\nimport { FaRobot, FaTimes, FaPaperPlane } from 'react-icons/fa';\r\nimport axios from 'axios';\r\nimport './ChatWidget.css';\r\n\r\nconst ChatWidget = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [messages, setMessages] = useState([\r\n    { \r\n      id: 1, \r\n      text: \"Hi there! I'm Oussema's AI assistant. How can I help you today?\", \r\n      sender: 'bot' \r\n    }\r\n  ]);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // Auto-scroll to bottom when messages change\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  const toggleChat = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!inputValue.trim()) return;\r\n    \r\n    // Add user message to chat\r\n    const userMessage = {\r\n      id: messages.length + 1,\r\n      text: inputValue,\r\n      sender: 'user'\r\n    };\r\n    \r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInputValue('');\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      // Call your backend API\r\n      const response = await axios.post('/api/chat', { message: inputValue });\r\n      \r\n      // Add bot response to chat\r\n      setMessages(prev => [\r\n        ...prev, \r\n        { \r\n          id: prev.length + 1, \r\n          text: response.data.message, \r\n          sender: 'bot' \r\n        }\r\n      ]);\r\n    } catch (error) {\r\n      console.error('Error getting AI response:', error);\r\n      setMessages(prev => [\r\n        ...prev, \r\n        { \r\n          id: prev.length + 1, \r\n          text: \"Sorry, I couldn't process your request. Please try again later.\", \r\n          sender: 'bot',\r\n          isError: true \r\n        }\r\n      ]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-widget-container\">\r\n      {isOpen && (\r\n        <div className=\"chat-window\">\r\n          <div className=\"chat-header\">\r\n            <div className=\"chat-title\">\r\n              <FaRobot className=\"bot-icon\" />\r\n              <span>Chat with Oussema's AI</span>\r\n            </div>\r\n            <button \r\n              className=\"close-button\" \r\n              onClick={toggleChat}\r\n              aria-label=\"Close chat\"\r\n            >\r\n              <FaTimes />\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"messages-container\">\r\n            {messages.map((message) => (\r\n              <div \r\n                key={message.id} \r\n                className={`message ${message.sender} ${message.isError ? 'error' : ''}`}\r\n              >\r\n                {message.text}\r\n              </div>\r\n            ))}\r\n            {isLoading && (\r\n              <div className=\"message bot loading\">\r\n                <div className=\"typing-indicator\">\r\n                  <span></span>\r\n                  <span></span>\r\n                  <span></span>\r\n                </div>\r\n              </div>\r\n            )}\r\n            <div ref={messagesEndRef} />\r\n          </div>\r\n          \r\n          <form className=\"input-container\" onSubmit={handleSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              value={inputValue}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Ask me anything about Oussema...\"\r\n              disabled={isLoading}\r\n            />\r\n            <button \r\n              type=\"submit\" \r\n              disabled={!inputValue.trim() || isLoading}\r\n              aria-label=\"Send message\"\r\n            >\r\n              <FaPaperPlane />\r\n            </button>\r\n          </form>\r\n        </div>\r\n      )}\r\n      \r\n      <button \r\n        className={`chat-toggle-button ${isOpen ? 'open' : ''}`}\r\n        onClick={toggleChat}\r\n        aria-label=\"Toggle chat\"\r\n      >\r\n        {isOpen ? <FaTimes /> : <FaRobot />}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWidget;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Toaster } from 'react-hot-toast';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Home from './pages/Home';\nimport Contact from './pages/Contact';\nimport ChatWidget from './components/ChatWidget/ChatWidget'; // Import the ChatWidget\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <main>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/contact\" component={Contact} />\n          </Switch>\n        </main>\n        <Footer />\n        <ChatWidget /> {/* Add the ChatWidget here */}\n        <Toaster \n          position=\"top-right\"\n          toastOptions={{\n            duration: 5000,\n            style: {\n              background: '#363636',\n              color: '#fff',\n            },\n            success: {\n              style: {\n                background: '#4caf50',\n              },\n            },\n            error: {\n              style: {\n                background: '#f44336',\n              },\n            },\n          }}\n        />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './assets/styles/global.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}